version: "3.8"
name: 'orders-service'

services:
  orders_app:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    volumes:
      - ../logs/orders_app:/project/logs
    ports:
      - "8000:8000"
    depends_on:
      - pgdb
      - kafka
    entrypoint: [ "docker/wait-for-it.sh", "${KAFKA_HOST}:${KAFKA_PORT}", "--" ]
    command: "uvicorn src.main:app --host 0.0.0.0 --port 8000"
  
  order_processing_app:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    volumes:
      - ../logs/order_processing_app:/project/logs
    depends_on:
      - pgdb
      - kafka
    entrypoint: [ "docker/wait-for-it.sh", "${KAFKA_HOST}:${KAFKA_PORT}", "--" ]
    command: "python -m src.run_consumer"

  pgdb:
    image: postgres:15.5-alpine3.19
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  kafka:
    image: bitnami/kafka:3.6.1-debian-12-r12
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "${KAFKA_PORT}:9092"
      - "${KAFKA_CONTROLLER_PORT}:9093"
      - "${KAFKA_EXTERNAL_PORT}:9094"

  kafka-ui:
    image: provectuslabs/kafka-ui:master
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - kafka

volumes:
  postgres_data:
