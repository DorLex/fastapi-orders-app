version: "3.8"

services:
  #  app:
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  #    env_file:
  #      - .env
  #    command: "uvicorn src.main:app --host 0.0.0.0 --port 8000"
  #    ports:
  #      - "8000:8000"
  #    depends_on:
  #      - pgdb
  #
  #  pgdb:
  #    image: postgres:15.5-alpine3.19
  #    restart: always
  #    env_file:
  #      - .env
  #    environment:
  #      - POSTGRES_USER=${DB_USER}
  #      - POSTGRES_PASSWORD=${DB_PASS}
  #      - POSTGRES_DB=${DB_NAME}
  #    ports:
  #      - "${DB_PORT}:5432"
  #    volumes:
  #      - postgres_data:/var/lib/postgresql/data/


  #  zookeeper:
  #    image: bitnami/zookeeper:3.9.1-debian-12-r15
  #    #    image: zookeeper:3.9.1-jre-17
  #    #    image: wurstmeister/zookeeper
  #    ports:
  #      - "2181:2181"
  #    environment:
  #      - ALLOW_ANONYMOUS_LOGIN=yes


  #  kafka:
  #    image: bitnami/kafka:3.6.1-debian-12-r12
  #    #    image: wurstmeister/kafka
  #    ports:
  #      - "9092:9092"
  #    environment:
  #      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #      - KAFKA_ADVERTISED_HOST_NAME=localhost
  #      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
  #      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
  #      - ALLOW_PLAINTEXT_LISTENER=yes
  #    depends_on:
  #      - zookeeper

  kafka:
    image: bitnami/kafka:3.6.1-debian-12-r12
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=L0ZEQh1yTbGhNNUE7-6wSQ
      - KAFKA_CFG_NODE_ID=1
    ports:
      - "9092:9092"



#volumes:
#  postgres_data: