version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: "uvicorn src.main:app --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    depends_on:
      - pgdb
      - kafka

  pgdb:
    image: postgres:15.5-alpine3.19
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  kafka:
    image: bitnami/kafka:3.6.1-debian-12-r12
    env_file:
      - .env
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT

      - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_KRAFT_CLUSTER_ID}
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1

      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${KAFKA_PORT},CONTROLLER://:${KAFKA_CONTROLLER_PORT}
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_HOST}:${KAFKA_PORT}
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@${KAFKA_HOST}:${KAFKA_CONTROLLER_PORT}
    ports:
      - "9092:9092"
      - "9093:9093"

  kafka-ui:
    image: provectuslabs/kafka-ui:master
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=${KAFKA_HOST}:${KAFKA_PORT}
    ports:
      - "8080:8080"
    depends_on:
      - kafka

volumes:
  postgres_data: